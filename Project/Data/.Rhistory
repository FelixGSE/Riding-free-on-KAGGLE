#for (v in names(conti))
conti <- as.data.frame(conti)
library(ggplot2)
for (v in names(conti)){
png(paste0('plot',v))
ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
dev.off()
}
ggplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
library(ggplot2)
for (v in names(conti)){
png(paste0('plot',v'.png'))
ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
dev.off()
}
for (v in names(conti)){
png(paste0('plot',v,'.png'))
ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
dev.off()
}
scale(conti)
by(conti,conti$x,
function(z) z$y[conti(z$y-mean(z$y))< 2*sd(z$y)])
conti <- as.data.frame(conti)
by(conti,conti$x,
function(z) z$y[conti(z$y-mean(z$y))< 2*sd(z$y)])
rmOutlier <- function(D,v) D <- D[which(abs(D$v-mean) < 2*sd(D$v)),]
summary(conti$n_tokens_title)
rmOutlier(conti,n_tokens_title)
summary(conti$n_tokens_title)
rmOutlier <- function(D,v) {
x <- D$v
D <- D[which(abs(x-mean(x)) < 2*sd(x)),]
}
summary(conti$n_tokens_title)
rmOutlier(conti,n_tokens_title)
summary(conti$n_tokens_title)
rmOutlier(conti,conti$n_tokens_title)
rmOutlier(conti,n_tokens_title)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[which(abs(D$v - mean(D$v)) < 2*sd(D$v)),]
}
}
rmOutlier(conti,n_tokens_title)
rmOutlier(conti)
warnings()
str(conti)
mean(conti_title$subjectivity)
mean(conti$title_subjectivity)
abs(conti$title_subjectivity - mean(conti$title_subjectivity)
)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(D$v)) < 2*sd(D$v),]
}
}
rmOutlier(conti)
test <- conti$title_subjectivity
conti[abs(test - mean(test)) < 2*sd(test),]
conti[abs(test - mean(test)) < 2*sd(test),]
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(D$v)) < 2*sd(D$v),]
}
}
rmOutlier(conti)
warnings()
names(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v),]
}
}
rmOutlier(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v),]
}
}
summary(conti$n_tokens_title)
rmOutlier(conti)
summary(conti$n_tokens_title)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v),]
}
}
str(conti)
rmOutlier(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[which(abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v)),]
}
}
str(conti)
conti <- rmOutlier(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- D[abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v),]
}
}
str(conti)
conti <- rmOutlier(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
str(conti)
for (v in names(conti)) {
conti <- conti[abs(conti$v - mean(as.numeric(conti$v))) < 2*sd(conti$v),]
}
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v))
}
}
str(conti)
conti <- rmOutlier(conti)
str(conti)
rmOutlier(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) < 2*sd(D$v))
}
}
str(conti)
rmOutlier(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) < 2*sd(as.numeric(D$v)))
}
}
str(conti)
rmOutlier(conti)
str(conti)
dim(conti)
x<-conti$n_unique_tokens
c<-conti
contismll<-subset(c, abs(x - mean(as.numeric(x))) < 2*sd(as.numeric(x)))
dim(contismll)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) < 2*sd(as.numeric(D$v)))
}
D
}
dim(conti)
conti <- rmOutlier(conti)
dim(conti)
head(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
rmOutlier <- function(D) {
for (v in names(D)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) > 2*sd(as.numeric(D$v)))
}
D
}
dim(conti)
conti <- rmOutlier(conti)
dim(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
str(conti)
conti <- as.data.frame(conti)
str(conti)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
head(conti)
for (v in names(conti)) {
print(v)
#D <- subset(D, abs(D$v - mean(as.numeric(D$v))) > 2*sd(as.numeric(D$v)))
}
D <- conti
for (v in names(conti)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) > 2*sd(as.numeric(D$v)))
}
head(D)
D <- conti
for (v in names(conti)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) > 2*sd(as.numeric(D$v)))
print(D)
}
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
head(conti)
D <- conti
for (v in names(conti)) {
D <- subset(D, abs(D$v - mean(as.numeric(D$v))) > 2*sd(as.numeric(D$v)))
print(D)
}
out <- c()
for(i in 1:ncol(D){
mu <- mean(D[,i])
sd <- sd(D[,i])
out <- c(out, which(abs(D[,i]-mu)>2*sd))
}
out
for(i in 1:ncol(D)) {
mu <- mean(D[,i])
sd <- sd(D[,i])
out <- c(out, which(abs(D[,i]-mu)>2*sd))
}
out
out <- data.frame()
for(i in 1:ncol(D)) {
mu <- mean(D[,i])
sd <- sd(D[,i])
out <- rbind(out, which(abs(D[,i]-mu)>2*sd))
}
out
out <- matrix(NA,ncol(D),1,byrow=T)
mu <- mean(D[,1])
,u
mu
mu <- D[,1]
mu
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
head(conti)
D <- conti
D <- conti
out <- c()
for(i in 1:ncol(D)) {
mu <- mean(D[,i])
sd <- sd(D[,i])
out <- c(out, which(abs(D[,i]-mu)>2*sd))
}
out
length(out)
length(unique(out))
out <- c()
for(i in 1:ncol(D)) {
mu <- mean(D[,i])
sd <- sd(D[,i])
out <- c(out, which(abs(D[,i]-mu)>3*sd))
}
length(unique(out))
a<-rnorm(20,0,10)
b<-rnorm(20,5,15)
c<-c(a,b)
hist(density(c))
c
a<-rnorm(20,0,10)
b<-rnorm(20,5,15)
c<-as.numeric(c(a,b))
hist(density(c))
c
hist(c)
hist(c,bins=10)
a<-rnorm(200,0,10)
b<-rnorm(30,5,15)
c<-as.numeric(c(a,b))
hist(c,bins=10)
c
a<-rnorm(200,0,10)
b<-rnorm(30,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =1000)
c
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(30,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
c
a<-rnorm(200,0,5)
b<-rnorm(50,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(50,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(50,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(50,5,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(50,100,15)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
a<-rnorm(200,0,5)
b<-rnorm(50,100,5)
c<-as.numeric(c(a,b))
hist(c,breaks =100)
var(c)
var(a)
median(c)
meadian(a)
median(a)
mean(c)
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
head(conti)
D <- conti
out <- c()
for(i in 1:ncol(D)) {
mu <- median(D[,i])
sd <- sd(D[,i])
out <- c(out, which(abs(D[,i]-mu)>3*sd))
}
length(unique(out))
setwd('/Users/Thomas/Dropbox/DS_GROUP/15D012 - Advanced Computational Methods/Work/R-Scripts/Thomas/')
source('prepData.R')
#for (v in names(conti))
conti <- as.data.frame(conti)
# library(ggplot2)
# for (v in names(conti)){
#   png(paste0('plot',v,'.png'))
#   ggplot(train$v,geom='density',fill=factor(train$popularity),alpha=I(.2))
#   dev.off()
# }
# qplot(train$n_tokens_title,geom='density',fill=factor(train$popularity),alpha=I(.2))
conti <- as.data.frame(conti)
head(conti)
D <- conti
out <- c()
for(i in 1:ncol(D)) {
v <- D[,i]
me <- median(v)
sd <- sd(v)
out <- c(out, which(abs(me)+2*mad(v)>3*sd))
}
length(unique(out))
out <- c()
for(i in 1:ncol(D)) {
v <- D[,i]
me <- median(v)
sd <- sd(v)
out <- c(out, which(abs(me)+2*mad(v)>2*sd))
}
length(unique(out))
out <- c()
for(i in 1:ncol(D)) {
v <- D[,i]
me <- median(v)
sd <- sd(v)
out <- c(out, which(abs(me)>me+2*mad(v)))
}
length(unique(out))
out
