% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictEnsemble.R
\name{predictEnsemble}
\alias{predictEnsemble}
\title{The function applies the same machine learning methods as the CV function. 
It iteratively computes predictions based on the averaged probability 
to belong to a class for each test observation. 
It finally outputs the prediction based on the averaging of all models.}
\usage{
predictEnsemble(data, y, test, rounds, threads = 2, ram = "4g")
}
\arguments{
\item{y}{A character indicating the name of the response variable}

\item{test}{An object of class data frame or matrix containing the test data}

\item{rounds}{Number of iterations that should be displayed}

\item{threads}{Number of threads the H20 server should use}

\item{ram}{Maximum number of memory}

\item{train}{An object of class data frame or matrix containing the training data}
}
\value{
A list with predicted labels
}
\description{
The function applies the same machine learning methods as the CV function. 
It iteratively computes predictions based on the averaged probability 
to belong to a class for each test observation. 
It finally outputs the prediction based on the averaging of all models.
}
\examples{

# Set Dimensions of training data set
n <- 1000  
m <- 61
# Compute Create random feature matrix and response vector
features <- matrix( rnorm( n*m , 0, 10 ), nrow = n, ncol = m )
response <- sample(5 , n, replace = T)

# Create data set and rename columns
toy <- data.frame(features , response)
colnames(toy) <- c(sapply(1:m,function(x) paste0("variable",x)),"popularity")

# Compute Create random test matrix 
test <- data.frame( matrix( rnorm( n*m , 0, 10 ), nrow = n, ncol = m ) )
colnames(test) <- sapply(1:m,function(x) paste0("variable",x))

predictEnsemble( data = toy, y = 'popularity', test = test, 
                 rounds = 2, threads = 2, ram ='4g' )
}

