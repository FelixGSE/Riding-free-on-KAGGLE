% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predForest copy.R, R/predForest2.R
\name{iditot}
\alias{iditot}
\title{Performs a random forest model based on input specifications}
\usage{
iditot(a)

iditot(a)
}
\arguments{
\item{training}{A data frame containing both the predicators and response}

\item{Nresponse}{Character defining the name of the response varaible in training}

\item{test}{A data frame containing the test data}

\item{drops}{A vector containing column names that should be droped from the training set}

\item{nt}{An integer specifying how many trees should be used in random. By deault = 1000}

\item{training}{A data frame containing both the predicators and response}

\item{Nresponse}{Character defining the name of the response varaible in training}

\item{test}{A data frame containing the test data}

\item{drops}{A vector containing column names that should be droped from the training set}

\item{nt}{An integer specifying how many trees should be used in random. By deault = 1000}
}
\value{
A data frame containing predicted labels for each id in the \code{test} data

A data frame containing predicted labels for each id in the \code{test} data
}
\description{
This functions is a wrapper to produce a basic random forest model, 
which can be used to produce quickly new results as a benchmark 
for the Kaggle competition. The function returns a named data frame
with id's an corresponding predicted labels.

This functions is a wrapper to produce a basic random forest model, 
which can be used to produce quickly new results as a benchmark 
for the Kaggle competition. The function returns a named data frame
with id's an corresponding predicted labels.
}
\examples{
# Create a simple training data set similiar to the competition set
size     <- 300

#Create test data set
features <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
response <- sample( size , 5 , replace = FALSE )
training <- data.frame( features , response )
colnames(training) <- c("F1","F2","F3","popularity")

# Create test data set
featuresTE <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
test       <- as.data.frame(cbind( 1:100, featuresTE) )
colnames(test)     <- c( "id","F1","F2","F3" )

# Run function
prediction <- predictForest( training = training, test = test, nt = 10 )
# Create a simple training data set similiar to the competition set
size     <- 300

#Create test data set
features <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
response <- sample( size , 5 , replace = FALSE )
training <- data.frame( features , response )
colnames(training) <- c("F1","F2","F3","popularity")

# Create test data set
featuresTE <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
test       <- as.data.frame(cbind( 1:100, featuresTE) )
colnames(test)     <- c( "id","F1","F2","F3" )

# Run function
prediction <- predictForest( training = training, test = test, nt = 10 )
}

