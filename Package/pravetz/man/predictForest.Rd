% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predForest.R
\name{predictForest}
\alias{predictForest}
\title{Performs a random forest model based on input specifications}
\usage{
predictForest(training = NULL, Nresponse = "popularity", test = NULL,
  drops = c("id", "url"), nt = 1000)
}
\arguments{
\item{training}{A data frame containing both the predicators and response}

\item{Nresponse}{Character defining the name of the response varaible in training}

\item{test}{A data frame containing the test data}

\item{drops}{A vector containing column names that should be droped from the training set}

\item{nt}{An integer specifying how many trees should be used in random. By deault = 1000}
}
\value{
A data frame containing predicted labels for each id in the \code{test} data
}
\description{
This functions reproduces in some way the results achieved in the
in the Kaggle competition so far. In doing so function performs based on the 
arguments a random forest to predict the test data.
}
\examples{
# Create a simple training data set similiar to the competition set
size     <- 300

Create test data set
features <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
response <- sample( size , 5 , replace = FALSE )
training <- data.frame( features , response )
colnames(training) <- c("F1","F2","F3","popularity")

# Create test data set
featuresTE <- matrix( rnorm(size,0,10), nrow = 100, ncol = 3 )
test       <- as.data.frame(cbind( 1:100, featuresTE) )
colnames(test)     <- c("id","F1","F2","F3")

# Run function
prediction <- predictForest(training = training, test = test, nt = 10)
}

